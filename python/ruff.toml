line-length = 88
indent-width = 4
preview = true
target-version = "py312"

[lint]
unfixable = [
  "PIE794",
  "PIE804",
  "T20",
  "SIM112",
  "F401",
  "F601",
  "F602",
  "F841",
]
future-annotations = true
ignore = ["TD001", "TD002", "TD003"]
select = [
  "FAST",  # FastAPI
  "YTT",   # flake8-2020
  "ANN",   # flake8-annotations
  "ASYNC", # flake8-async
  "S",     # flake8-bandit
  "BLE",   # flake8-blind-except
  "FBT",   # flake8-boolean-trap
  "B",     # flake8-bugbear
  "A",     # flake8-builtins
  "COM",   # flake8-commas
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "T10",   # flake8-debugger
  "DJ",    # flake8-django
  "EM",    # flake8-errmsg
  "EXE",   # flake8-executable
  "FA",    # flake8-future-annotations
  "INT",   # flake8-gettext
  "ISC",   # flake8-implicit-str-concat
  "ICN",   # flake8-import-conventions
  "LOG",   # flake8-logging
  "G",     # flake8-logging-format
  "INP",   # flake8-no-pep420
  "PIE",   # flake8-pie
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "RSE",   # flake8-raise
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SIM",   # flake8-simplify
  "SLOT",  # flake8-slots
  "TID",   # flake8-tidy-imports
  "TD",    # flake8-todos
  "TC",    # flake8-type-checking
  "ARG",   # flake8-unused-arguments
  "PTH",   # flake8-use-pathlib
  "FLY",   # flynt
  "I",     # isort
  "C90",   # mccabe
  "NPY",   # NumPy-specific rules
  "PD",    # pandas-vet
  "N",     # pep8-naming
  "PERF",  # Perflint
  "E",     # pycodestyle Error
  "W",     # pycodestyle Warning
  "D",     # pydocstyle
  "F",     # Pyflakes
  "PLC",   # Pylint Convention
  "PLE",   # Pylint Error
  "PLR",   # Pylint Refactor
  "PLW",   # Pylint Warning
  "UP",    # pyupgrade
  "FURB",  # refurb
  "RUF",   # Ruff-specific rules
  "TRY",   # tryceratops
]

[lint.per-file-ignores]
"**/tests/**" = [
  "ANN",
  "S101",
  "ARG",
  "D",
  "PLR2004",
  "PLR0913",
  "SLF001",
  "T20",
  "E402",
]

[lint.isort]
combine-as-imports = true

[lint.mccabe]
max-complexity = 10

[lint.pydocstyle]
convention = "google"

[format]
docstring-code-format = true
indent-style = "space"
line-ending = "lf"
quote-style = "double"
